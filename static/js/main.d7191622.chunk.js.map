{"version":3,"sources":["components/Form/Form.jsx","components/AddClocks/AddClocks.jsx","App.jsx","index.js"],"names":["Form","onSubmit","useState","name","setName","timezone","setTimezone","className","e","preventDefault","id","nanoid","htmlFor","required","type","placeholder","value","onChange","target","step","min","max","Clock","props","state","title","time","toOffsetDate","offset","this","interval","setInterval","tick","clearInterval","hrs","moment","utc","add","hours","mins","minutes","secs","seconds","set","format","setState","removeTime","onClick","Component","INITIAL_TIMES","App","times","setTimes","newTime","prevTimes","map","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7191622.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './Form.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [timezone, setTimezone] = useState('');\n\n  const handleNameInput = (e) => {\n    setName(() => e.target.value);\n  };\n  const handleTimeInput = (e) => {\n    setTimezone(() => e.target.value);\n  };\n\n  const resetForm = () => {\n    setName(() => '');\n    setTimezone(() => '');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && timezone) {\n      onSubmit({\n        id: nanoid(),\n        name,\n        timezone,\n      });\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form-field\">\n          <label className=\"form-label\" htmlFor=\"name\">Название</label>\n          <input id=\"name\" className=\"form-name\" required=\"required\" type=\"text\" placeholder=\"Нью-Йорк\" value={name} onChange={handleNameInput} />\n        </div>\n        <div className=\"form-field\">\n          <label className=\"form-label\" htmlFor=\"timezone\">Временная зона</label>\n          <input id=\"timezone\" className=\"form-timezone\" required=\"required\" type=\"number\" step=\"1\" min=\"-12\" max=\"12\" placeholder=\"0\" value={timezone} onChange={handleTimeInput} />\n        </div>\n        <div className=\"form-field\">\n          <button className=\"form-add\" type=\"submit\">Добавить</button>\n        </div>\n      </form>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport './AddClocks.css';\n\nexport default class Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      name: this.props.title,\n      time: this.toOffsetDate(this.props.offset),\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.tick(),\n      100\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  toOffsetDate(offset) {\n    const hrs = moment().utc().add(offset,'hours').hours();\n    const mins = moment().minutes();\n    const secs = moment().seconds();\n    return moment().set({ hours: hrs, minutes: mins, seconds: secs }).format('HH:mm:ss');\n  }\n\n  tick() {\n    this.setState({\n      time: this.toOffsetDate(this.props.offset)\n    });\n  }\n\n  render() {\n    const { removeTime } = this.props;\n    return (\n      <div className=\"App-clock\">\n        <div className=\"clock_title\">{this.state.name}:</div>\n        <div className=\"clock_time\">{this.state.time}</div>\n        <button className=\"clock_remove\" type=\"button\" onClick={removeTime}>&times;</button>\n      </div>\n    );\n  }\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\nimport Clock from './components/AddClocks/AddClocks';\nimport { nanoid } from 'nanoid';\n\nconst INITIAL_TIMES = [{\n  id: nanoid(),\n  name: \"США\",\n  timezone: \"-5\",\n}, {\n  id: nanoid(),\n  name: \"Москва\",\n  timezone: \"3\",\n}, {\n  id: nanoid(),\n  name: \"Берлин\",\n  timezone: \"2\",\n}];\n\nexport default function App() {\n  const [times, setTimes] = useState(INITIAL_TIMES);\n\n  const handleAddTimes = (newTime) => {\n    setTimes((prevTimes) => [...prevTimes, newTime]);\n  };\n\n  const removeTime = (id) => {\n    setTimes((prevTimes) => prevTimes.filter((time) => time.id !== id));\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Form onSubmit={handleAddTimes} />\n      {times.map((time) =>\n        <Clock times={times} key={time.id} offset={time.timezone} title={time.name} id={time.id}  removeTime={() => removeTime(time.id)} />\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}